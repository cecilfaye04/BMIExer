//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MvcWCFExer.BMIService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HeightRequest", Namespace="http://schemas.datacontract.org/2004/07/ExerService")]
    [System.SerializableAttribute()]
    public partial class HeightRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double HeightField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Height {
            get {
                return this.HeightField;
            }
            set {
                if ((this.HeightField.Equals(value) != true)) {
                    this.HeightField = value;
                    this.RaisePropertyChanged("Height");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ErrorListResponse", Namespace="http://schemas.datacontract.org/2004/07/ExerService")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MvcWCFExer.BMIService.WeightResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MvcWCFExer.BMIService.CalculateBMIResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MvcWCFExer.BMIService.HeightResponse))]
    public partial class ErrorListResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WeightResponse", Namespace="http://schemas.datacontract.org/2004/07/ExerService")]
    [System.SerializableAttribute()]
    public partial class WeightResponse : MvcWCFExer.BMIService.ErrorListResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double WeightField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Weight {
            get {
                return this.WeightField;
            }
            set {
                if ((this.WeightField.Equals(value) != true)) {
                    this.WeightField = value;
                    this.RaisePropertyChanged("Weight");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CalculateBMIResponse", Namespace="http://schemas.datacontract.org/2004/07/ExerService")]
    [System.SerializableAttribute()]
    public partial class CalculateBMIResponse : MvcWCFExer.BMIService.ErrorListResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double BMIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double BMI {
            get {
                return this.BMIField;
            }
            set {
                if ((this.BMIField.Equals(value) != true)) {
                    this.BMIField = value;
                    this.RaisePropertyChanged("BMI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HeightResponse", Namespace="http://schemas.datacontract.org/2004/07/ExerService")]
    [System.SerializableAttribute()]
    public partial class HeightResponse : MvcWCFExer.BMIService.ErrorListResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double HeightField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Height {
            get {
                return this.HeightField;
            }
            set {
                if ((this.HeightField.Equals(value) != true)) {
                    this.HeightField = value;
                    this.RaisePropertyChanged("Height");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WeightRequest", Namespace="http://schemas.datacontract.org/2004/07/ExerService")]
    [System.SerializableAttribute()]
    public partial class WeightRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double WeightField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Weight {
            get {
                return this.WeightField;
            }
            set {
                if ((this.WeightField.Equals(value) != true)) {
                    this.WeightField = value;
                    this.RaisePropertyChanged("Weight");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CalculateBMIRequest", Namespace="http://schemas.datacontract.org/2004/07/ExerService")]
    [System.SerializableAttribute()]
    public partial class CalculateBMIRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double HeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double WeightField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Height {
            get {
                return this.HeightField;
            }
            set {
                if ((this.HeightField.Equals(value) != true)) {
                    this.HeightField = value;
                    this.RaisePropertyChanged("Height");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Weight {
            get {
                return this.WeightField;
            }
            set {
                if ((this.WeightField.Equals(value) != true)) {
                    this.WeightField = value;
                    this.RaisePropertyChanged("Weight");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BMIService.IBMIService1")]
    public interface IBMIService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBMIService1/ConvertCmToFeet", ReplyAction="http://tempuri.org/IBMIService1/ConvertCmToFeetResponse")]
        MvcWCFExer.BMIService.HeightResponse ConvertCmToFeet(MvcWCFExer.BMIService.HeightRequest cm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBMIService1/ConvertCmToFeet", ReplyAction="http://tempuri.org/IBMIService1/ConvertCmToFeetResponse")]
        System.Threading.Tasks.Task<MvcWCFExer.BMIService.HeightResponse> ConvertCmToFeetAsync(MvcWCFExer.BMIService.HeightRequest cm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBMIService1/ConvertFeetToCm", ReplyAction="http://tempuri.org/IBMIService1/ConvertFeetToCmResponse")]
        MvcWCFExer.BMIService.HeightResponse ConvertFeetToCm(MvcWCFExer.BMIService.HeightRequest ft);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBMIService1/ConvertFeetToCm", ReplyAction="http://tempuri.org/IBMIService1/ConvertFeetToCmResponse")]
        System.Threading.Tasks.Task<MvcWCFExer.BMIService.HeightResponse> ConvertFeetToCmAsync(MvcWCFExer.BMIService.HeightRequest ft);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBMIService1/ConvertKgtoLbs", ReplyAction="http://tempuri.org/IBMIService1/ConvertKgtoLbsResponse")]
        MvcWCFExer.BMIService.WeightResponse ConvertKgtoLbs(MvcWCFExer.BMIService.WeightRequest kg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBMIService1/ConvertKgtoLbs", ReplyAction="http://tempuri.org/IBMIService1/ConvertKgtoLbsResponse")]
        System.Threading.Tasks.Task<MvcWCFExer.BMIService.WeightResponse> ConvertKgtoLbsAsync(MvcWCFExer.BMIService.WeightRequest kg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBMIService1/ConvertLbsToKgs", ReplyAction="http://tempuri.org/IBMIService1/ConvertLbsToKgsResponse")]
        MvcWCFExer.BMIService.WeightResponse ConvertLbsToKgs(MvcWCFExer.BMIService.WeightRequest lbs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBMIService1/ConvertLbsToKgs", ReplyAction="http://tempuri.org/IBMIService1/ConvertLbsToKgsResponse")]
        System.Threading.Tasks.Task<MvcWCFExer.BMIService.WeightResponse> ConvertLbsToKgsAsync(MvcWCFExer.BMIService.WeightRequest lbs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBMIService1/CalculateBMI", ReplyAction="http://tempuri.org/IBMIService1/CalculateBMIResponse")]
        MvcWCFExer.BMIService.CalculateBMIResponse CalculateBMI(MvcWCFExer.BMIService.CalculateBMIRequest bmi);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBMIService1/CalculateBMI", ReplyAction="http://tempuri.org/IBMIService1/CalculateBMIResponse")]
        System.Threading.Tasks.Task<MvcWCFExer.BMIService.CalculateBMIResponse> CalculateBMIAsync(MvcWCFExer.BMIService.CalculateBMIRequest bmi);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBMIService1Channel : MvcWCFExer.BMIService.IBMIService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BMIService1Client : System.ServiceModel.ClientBase<MvcWCFExer.BMIService.IBMIService1>, MvcWCFExer.BMIService.IBMIService1 {
        
        public BMIService1Client() {
        }
        
        public BMIService1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BMIService1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BMIService1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BMIService1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MvcWCFExer.BMIService.HeightResponse ConvertCmToFeet(MvcWCFExer.BMIService.HeightRequest cm) {
            return base.Channel.ConvertCmToFeet(cm);
        }
        
        public System.Threading.Tasks.Task<MvcWCFExer.BMIService.HeightResponse> ConvertCmToFeetAsync(MvcWCFExer.BMIService.HeightRequest cm) {
            return base.Channel.ConvertCmToFeetAsync(cm);
        }
        
        public MvcWCFExer.BMIService.HeightResponse ConvertFeetToCm(MvcWCFExer.BMIService.HeightRequest ft) {
            return base.Channel.ConvertFeetToCm(ft);
        }
        
        public System.Threading.Tasks.Task<MvcWCFExer.BMIService.HeightResponse> ConvertFeetToCmAsync(MvcWCFExer.BMIService.HeightRequest ft) {
            return base.Channel.ConvertFeetToCmAsync(ft);
        }
        
        public MvcWCFExer.BMIService.WeightResponse ConvertKgtoLbs(MvcWCFExer.BMIService.WeightRequest kg) {
            return base.Channel.ConvertKgtoLbs(kg);
        }
        
        public System.Threading.Tasks.Task<MvcWCFExer.BMIService.WeightResponse> ConvertKgtoLbsAsync(MvcWCFExer.BMIService.WeightRequest kg) {
            return base.Channel.ConvertKgtoLbsAsync(kg);
        }
        
        public MvcWCFExer.BMIService.WeightResponse ConvertLbsToKgs(MvcWCFExer.BMIService.WeightRequest lbs) {
            return base.Channel.ConvertLbsToKgs(lbs);
        }
        
        public System.Threading.Tasks.Task<MvcWCFExer.BMIService.WeightResponse> ConvertLbsToKgsAsync(MvcWCFExer.BMIService.WeightRequest lbs) {
            return base.Channel.ConvertLbsToKgsAsync(lbs);
        }
        
        public MvcWCFExer.BMIService.CalculateBMIResponse CalculateBMI(MvcWCFExer.BMIService.CalculateBMIRequest bmi) {
            return base.Channel.CalculateBMI(bmi);
        }
        
        public System.Threading.Tasks.Task<MvcWCFExer.BMIService.CalculateBMIResponse> CalculateBMIAsync(MvcWCFExer.BMIService.CalculateBMIRequest bmi) {
            return base.Channel.CalculateBMIAsync(bmi);
        }
    }
}
